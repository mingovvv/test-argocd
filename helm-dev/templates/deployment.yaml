apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.deployment.name }}-{{ .Values.serviceEnv }}
  namespace: {{ .Values.namespace }}
spec:
  selector:
    matchLabels:
      app: {{ .Values.deployment.app.name }}-{{ .Values.serviceEnv }}
  replicas: {{ .Values.deployment.replicas }}
  strategy:
    type: {{ .Values.deployment.update.type }}
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      annotations:
        rollme: {{ randAlphaNum 5 | quote }}
      labels:
        app: {{ .Values.deployment.app.name }}-{{ .Values.serviceEnv }}
    spec:
      containers:
      - name: {{ .Values.deployment.container.name }}-{{ .Values.serviceEnv }}
        image: {{ .Values.deployment.image.name }}:{{ .Values.deployment.image.tag }}
        imagePullPolicy: {{ .Values.deployment.image.pullPolicy }}
        ports:
        - containerPort: 8080
        resources:
          requests:
            memory: "200Mi"
          limits:
            memory: "500Mi"
        readinessProbe: # readinessProbe
          httpGet: # 검증 방식
            path: /health
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 3
          successThreshold: 3
{{/*        livenessProbe: # livenessProbe*/}}
{{/*          httpGet: # 검증 방식 : httpGet*/}}
{{/*            path: /health*/}}
{{/*            port: 8080*/}}
{{/*          initialDelaySeconds: 10*/}}
{{/*          periodSeconds: 10*/}}
{{/*          timeoutSeconds: 3*/}}
{{/*          failureThreshold: 3*/}}