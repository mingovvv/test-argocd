apiVersion: v1
kind: Deployment
metadata:
  name: {{ include "mtest.fullname" . }}
  namespace: {{ .Values.namespace }}
spec:
  selector:
    matchLabels:
      app: {{ .Values.deployment.app.name }}-{{ .Values.serviceEnv }}
  replicas: {{ .Values.deployment.replicas }}
  strategy:
    type: {{ .Values.deployment.update.type }}
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: {{ .Values.deployment.app.name }}-{{ .Values.serviceEnv }}
      # annotations:
      #   prometheus.io/path: /actuator/prometheus
      #   prometheus.io/port: '8000'
      #   prometheus.io/scheme: http
      #   prometheus.io/scrape: 'true'
    spec:
      containers:
          - name: {{ .Values.deployment.container.name }}-{{ .Values.serviceEnv }}
            image: {{ .Values.deployment.repo.url }}/{{ .Values.namespace }}/{{ .Values.deployment.image.name }}/{{ .Values.serviceEnv }}:{{ .Values.deployment.image.tag}}
            ports:
                - containerPort: 8000
            volumeMounts:
              - name: {{ .Values.deployment.volume.name }}-{{ .Values.serviceEnv }}
                mountPath: /logs
            readinessProbe:
              tcpSocket:
                port: 8000
        #              initialDelaySeconds: 3
        #              periodSeconds: 2
            env:
              - name: SPRING_PROFILES_ACTIVE
                value: {{ .Values.serviceEnv }}
              - name: SERVICE_PROTOCOL
                value: https
              - name: SERVICE_HOST
                value: {{ .Values.ingress.rule.host }}
              - name: SERVICE_PATH
                value: "/{{ .Values.service.name }}-{{ .Values.serviceEnv }}"
              - name: DB_HOST
                value: jdbc:mariadb://10.0.50.140:31173/PORTAL_V2
              - name: DB_USERNAME
                valueFrom:
                  secretKeyRef:
                    name: {{ .Values.secrets }}
                    key: dbUsername
              - name: DB_PASSWORD
                valueFrom:
                  secretKeyRef:
                    name: {{ .Values.secrets }}
                    key: dbPassword
            resources:
              requests:
                memory: "{{ default "64Mi" .Values.deployment.resource.request.memory }}"
                cpu: "{{ default "100m" .Values.deployment.resource.request.cpu }}"
              limits:
                memory: "{{ default "64Mi" .Values.deployment.resource.limits.memory }}"
                cpu: "{{ default "100m" .Values.deployment.resource.limits.cpu }}"
      volumes:
        - name: {{ .Values.deployment.volume.name }}-{{ .Values.serviceEnv }}
          persistentVolumeClaim:
            claimName: {{ .Values.pvc.name }}-{{ .Values.serviceEnv }}
      imagePullSecrets:
          - name: regcred10092

